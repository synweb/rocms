namespace RoCMS.SberbankPaymentSystem.Models
{
    public class RegisterPreAuthRequest
    {
        /// <summary>
        /// Открытый ключ, который можно использовать для регистрации заказа
        /// </summary>
        public string token { get; set; }

        public string userName { get; set; }

        public string password { get; set; }
        /// <summary>
        /// Номер (идентификатор) заказа в системе магазина, уникален для каждого магазина в пределах системы. 
        /// Если номер заказа генерируется на стороне платёжного шлюза, этот параметр передавать необязательно.
        /// </summary>
        public string orderNumber { get; set; }

        /// <summary>
        /// Сумма платежа в копейках (или центах)
        /// </summary>
        public int amount { get; set; }

        /// <summary>
        /// Код валюты платежа ISO 4217. Единственное допустимое значение - 643.
        /// </summary>
        public int currency { get; set; }


        /// <summary>
        /// Адрес, на который требуется перенаправить пользователя в случае успешной оплаты. Адрес
        /// должен быть указан полностью, включая используемый протокол (например, https://test.ru вместо tes
        /// t.ru). В противном случае пользователь будет перенаправлен по адресу следующего вида: http://&lt;ад
        /// рес_платёжного_шлюза&gt;/&lt;адрес_продавца&gt;.
        /// </summary>
        public string returnUrl { get; set; }

        /// <summary>
        /// Адрес, на который требуется перенаправить пользователя в случае неуспешной оплаты. Адрес
        /// должен быть указан полностью, включая используемый протокол (например, https://test.ru вместо tes
        /// t.ru). В противном случае пользователь будет перенаправлен по адресу следующего вида: http://&lt;ад
        /// рес_платёжного_шлюза&gt;/&lt;адрес_продавца&gt;.
        /// </summary>
        public string failUrl { get; set; }

        /// <summary>
        /// Описание заказа в свободной форме. В процессинг банка для включения в финансовую отчётность
        /// продавца передаются только первые 24 символа этого поля. 
        /// </summary>
        public string description { get; set; }


        /// <summary>
        /// Язык в кодировке ISO 639-1. Если не указан, будет использован язык, указанный в настройках
        /// магазина как язык по умолчанию (default language)
        /// </summary>
        public string language { get; set; }


        /// <summary>
        /// По значению данного параметра определяется, какие страницы платёжного интерфейса должны
        /// загружаться для клиента. <br/>
        /// 
        /// Возможные значения:
        /// — DESKTOP – для загрузки страниц, верстка которых предназначена для отображения на экранах
        /// ПК (в архиве страниц платёжного интерфейса будет осуществляться поиск страниц с
        /// названиями payment_&lt;locale&gt;.html и errors_&lt;locale&gt;.html );
        /// 
        /// MOBILE – для загрузки страниц, верстка которых предназначена для отображения на экранах
        /// мобильных устройств (в архиве страниц платёжного интерфейса будет осуществляться поиск
        /// страниц с названиями mobile_payment_&lt;locale&gt;.html и mobile_errors_&lt;locale&gt;.html
        /// );
        /// Если магазин создал страницы платёжного интерфейса, добавив в название файлов страниц
        /// произвольные префиксы, передайте значение нужного префикса в параметре pageView для
        /// загрузки соответствующей страницы. Например, при передаче значения iphone в архиве
        /// страниц платёжного интерфейса будет осуществляться поиск страниц с названиями iphone_p
        /// ayment_&lt;locale&gt;.html и iphone_error_&lt;locale&gt;.html.
        /// Где:
        /// locale – язык страницы в кодировке ISO 639-1. Например, ru для русского или en для
        /// английского.
        /// Если параметр отсутствует, либо не соответствует формату, то по умолчанию считается pageView=
        /// DESKTOP
        /// </summary>
        public string pageView { get; set; }

        /// <summary>
        /// Номер (идентификатор) клиента в системе магазина. Используется для реализации функционала
        /// связок. Может присутствовать, если магазину разрешено создание связок.
        /// Указание этого параметра при платежах по связке необходимо - в противном случае
        /// платёж будет неуспешен.
        /// </summary>
        public string clientId { get; set; }

        /// <summary>
        /// Чтобы зарегистрировать заказ от имени дочернего мерчанта, укажите его логин в этом параметре
        /// </summary>
        public string merchantLogin { get; set; }

        /// <summary>
        /// Блок для передачи дополнительных параметров мерчанта. Поля дополнительной информации для
        /// последующего хранения, передаются в виде:
        /// {"&lt;name1&gt;":"&lt;value1&gt;",...,"&lt;nameN&gt;":"&lt;valueN&gt;"},
        /// Данные поля могут быть переданы в процессинг банка для последующего отображения в реестрах.*
        /// Включение данного функционала возможно по согласованию с банком в период интеграции.
        /// Если для продавца настроена отправка уведомлений покупателю, адрес электронной почты
        /// покупателя должен передаваться в этом блоке в параметре с именем email.
        /// </summary>
        public string jsonParams { get; set; }

        /// <summary>
        /// Продолжительность жизни заказа в секундах.
        /// В случае если параметр не задан, будет использовано значение, указанное в настройках мерчанта
        /// или время по умолчанию (1200 секунд = 20 минут).
        /// Если в запросе присутствует параметр expirationDate, то значение параметра sessionTimeout
        /// Secs не учитывается.
        /// </summary>
        public int sessionTimeoutSecs { get; set; }

        /// <summary>
        /// Дата и время окончания жизни заказа. Формат: yyyy-MM-ddTHH:mm:ss.
        /// Если этот параметр не передаётся в запросе, то для определения времени окончания жизни заказа
        /// используется sessionTimeoutSecs .
        /// </summary>
        public string expirationDate { get; set; }

        /// <summary>
        /// Идентификатор связки, созданной ранее. Может использоваться, только если у магазина есть
        /// разрешение на работу со связками. Если этот параметр передаётся в данном запросе, то это
        /// означает:
        /// 1. Данный заказ может быть оплачен только с помощью связки;
        /// 2. Плательщик будет перенаправлен на платёжную страницу, где требуется только ввод CVC
        /// </summary>
        public string bindingId { get; set; }

        /// <summary>
        /// Возможно использование следующих значений.
        /// AUTO_PAYMENT - Если запрос на регистрацию заказа инициирует проведение автоплатежей.
        /// VERIFY - Если указать это значение после запроса на регистрацию заказа произойдёт верификация
        /// держателя карты без списания средств с его счёта, поэтому в запросе можно передавать нулевую
        /// сумму. Верификация позволяет убедиться, что карта находится в руках владельца, и впоследствии
        /// списывать с этой карты средства, не прибегая к проверке аутентификационных данных (CVC,
        /// 3D-Secure) при совершении последующих платежей.
        /// Особенности передачи значения VERIFY
        /// Даже если сумма платежа будет передана в запросе, она не будет списана со счёта
        /// покупателя. После успешной регистрации заказ сразу переводится в статус REVERSED
        /// (отменён).
        /// </summary>
        public string features { get; set; }
    }
}
