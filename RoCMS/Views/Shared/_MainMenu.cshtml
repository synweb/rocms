@using RoCMS.Web.Contract.Services
@using RoCMS.Web.Contract.Models
@{

    var blockService = DependencyResolver.Current.GetService<IBlockService>();

    var menuService = DependencyResolver.Current.GetService<IMenuService>();
    var mainMenu = menuService.GetMainMenu();
    var pageService = DependencyResolver.Current.GetService<IPageService>();

    string curPath = HttpUtility.UrlDecode(Request.Url.AbsolutePath);
    var heartService = DependencyResolver.Current.GetService<IHeartService>();
}


<ul class="nav navbar-nav">
    <li class="@(Request.Url.AbsolutePath == Url.Action("Index", "Home") ? "active" : "")"><a href="/"><i class="fa fa-home"></i></a></li>
    @foreach (var menuItem in mainMenu.Items)
    {
        string url = "#";
        bool hasMegaMenu = menuItem.BlockId.HasValue;
        bool hasChildren = menuItem.Items != null && menuItem.Items.Any();
        bool showCaret = hasChildren || hasMegaMenu;
        if (!String.IsNullOrEmpty(menuItem.PageUrl))
        {

            url = String.Format("/{0}", heartService.GetCanonicalUrl(menuItem.PageUrl));
        }
        <li class="@((curPath == url || curPath.Contains(String.Format("{0}/", url))) ? "active" : "") @(showCaret ? "dropdown" : "" )">
            <a href="@url" @(showCaret ? "class=dropdown-toggle data-toggle=dropdown aria-haspopup=true aria-expanded=false role=button" : "")>
                @menuItem.Name @if (showCaret)
                               {
                                   <span class=caret></span>
                               }
            </a>
            @if (hasMegaMenu)
            {
                var block = blockService.GetBlock(menuItem.BlockId.Value);
                if (block != null)
                {
                    <ul class="dropdown-menu">
                        <li>
                            <div class="yamm-content">
                                @Html.Raw(block.Content)
                            </div>
                        </li>
                    </ul>
                }
            }
            else if (hasChildren)
            {
                <ul class="dropdown-menu">
                    @foreach (var subItem in menuItem.Items)
                    {
                        string suburl = "#";
                        if (!String.IsNullOrEmpty(subItem.PageUrl))
                        {
                            suburl = String.Format("/{0}", heartService.GetCanonicalUrl(subItem.PageUrl));
                        }
                        <li class="@((curPath == suburl || curPath.Contains(String.Format("{0}/", suburl))) ? "active" : "")">
                            <a href="@suburl">@subItem.Name</a>
                        </li>
                    }
                </ul>
            }
        </li>
    }
</ul>


