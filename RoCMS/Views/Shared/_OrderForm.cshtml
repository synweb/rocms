@using System.Text
@using Resources
@using RoCMS.Web.Contract.Models
@using RoCMS.Web.Contract.Services
@model int
@{
    var orderFormService = DependencyResolver.Current.GetService<IOrderFormService>();
    var form = orderFormService.GetOrderForm(Model);

    string formId = "frm" + Guid.NewGuid();
}
@if (form != null && form.Fields.Any())
{
    <div>
        <div class="order-container" id="@formId">
            <form class="message-container form-horizontal pd-sm">
                @if (String.IsNullOrEmpty(form.HtmlTemplate))
                {
                    foreach (var field in form.Fields.OrderBy(x => x.SortOrder))
                    {
                        string elemName = "fld" + field.OrderFormFieldId;
                        if (field.Required || field.ValueType == OrderFormFieldType.Email)
                        {
                            <span class="field-validation-valid" data-valmsg-for="@elemName" data-valmsg-replace="true"></span>
                        }
                        if (field.ValueType == OrderFormFieldType.TextArea)
                        {
                            <textarea rows="4" class="@(field.Required ? "required" : "") form-control" data-label="@field.LabelText" name="@elemName" placeholder="@field.LabelText"
                                      type="@(field.ValueType == OrderFormFieldType.Number ? "number" : "text")"></textarea>
                        }
                        else if (field.ValueType == OrderFormFieldType.List)
                        {
                            IList<string> vals = field.AcceptableValues.Split(',');
                            <select class="form-control" data-label="@field.LabelText" name="@elemName" placeholder="@field.LabelText">
                                @foreach (var val in vals)
                                {
                                    <option>@val.Trim()</option>
                                }
                            </select>
                        }
                        else
                        {
                            <input class="@(field.Required ? "required" : "") form-control @(Enum.GetName(typeof(OrderFormFieldType), field.ValueType).ToLower())" data-label="@field.LabelText" name="@elemName" placeholder="@field.LabelText"
                                   type="@(field.ValueType == OrderFormFieldType.Number ? "number" : "text")" />
                        }
                    }
                }
                else
                {
                    StringBuilder htmlFields = new StringBuilder(form.HtmlTemplate);
                    foreach (var field in form.Fields.OrderBy(x => x.SortOrder))
                    {
                        StringBuilder element = new StringBuilder();
                        string elemName = "fld" + field.OrderFormFieldId;
                        if (field.Required || field.ValueType == OrderFormFieldType.Email)
                        {
                            element.Append(String.Format("<span class=\"field-validation-valid\" data-valmsg-for=\"{0}\" data-valmsg-replace=\"true\"></span>", elemName));
                        }
                        if (field.ValueType == OrderFormFieldType.TextArea)
                        {
                            element.Append(String.Format("<textarea rows=\"4\" class=\"{0} form-control\" data-label=\"{2}\" name=\"{1}\" placeholder=\"{2}\"" +
                                                         "></textarea>", field.Required ? "required" : "", elemName, field.LabelText));
                        }
                        else if (field.ValueType == OrderFormFieldType.List)
                        {
                            IList<string> vals = field.AcceptableValues.Split(',');

                            element.Append(String.Format("<select class=\"form-control\" data-label=\"{0}\" name=\"{1}\" placeholder=\"{0}\">", field.LabelText, elemName));
                            foreach (var val in vals)
                            {
                                element.Append(String.Format("<option>{0}</option>",val.Trim()));
                            }
                            element.Append("</select>");
                        }
                        else
                        {
                            element.Append(String.Format("<input class=\"{0} form-control {1}\" data-label=\"{3}\" name=\"{2}\" placeholder=\"{3}\""
                                                         + "type=\"{4}\" />", field.Required ? "required" : "",
                                Enum.GetName(typeof(OrderFormFieldType), field.ValueType).ToLower(),
                                elemName,
                                field.LabelText,
                                field.ValueType == OrderFormFieldType.Number ? "number" : "text"

                                ));
                        }

                        int idx = form.Fields.IndexOf(field);
                        string tmpl = String.Format("{{{0}}}", idx);
                        htmlFields = htmlFields.ToString().Contains(tmpl) ? htmlFields.Replace(tmpl, element.ToString()) : htmlFields.Append(element.ToString());
                    }

                                @Html.Raw(htmlFields.ToString())
                            }
                            @if (form.FileAttachmentEnabled)
                {
                    <div class="form-group">
                        <div class="col-xs-12">
                            <div class="pull-right text-right">
                                <small>
                                    Максимальное количество файлов: @form.MaxFileAttachmentsCount<br />
                                    Максимальный суммарный размер файлов: 25 Мб
                                </small>
                            </div>
                            <div class="order-attachment text-left">
                                <div class="file-upload">
                                    <div class="fileupload-buttonbar">
                                        <button type="button" class="btn btn-light fileinput-button">
                                            <i class="fa fa-plus"></i>
                                            <span>@Strings.Order_AddFile</span>
                                        </button>
                                        <input id="fileupload" type="file" name="files[]" data-url="/Upload/TempUploadHandler.ashx" style="display: none;">
                                    </div>
                                </div>
                            </div>
                            <div class="text-left">
                                <ul id="attachments"></ul>
                            </div>
                        </div>
                    </div>
                }
                <div class="text-center">
                    <button class="send btn btn-lg btn-dark" type="button">@(form.SendButtonText ?? "Отправить")</button>
                    @if (!form.HideClearButton)
                    {
                        <button class="clear btn btn-lg btn-light" type="button">@(form.ClearButtonText ?? "Очистить")</button>
                    }
                    <div class="message-state">&nbsp;</div>
                </div>
            </form>

        </div>

        @if (!Request.IsAjaxRequest())
        {
            @Js("Content/admin/vendor/FU/short")
            @Js("Content/client/ro/js/rocms.client.orderform.js")
            @JsInline(
    @<script type="text/javascript">
        $(function () {
            onOrderFormLoaded("@(formId)", parseInt("@form.OrderFormId"), parseInt("@form.MaxFileAttachmentsCount"), "@form.FileAttachmentEnabled",
                "@form.RedirectUrl", "@form.SuccessMessage", "@form.MetricsCode");
        });
    </script>
            )
        }
        else
        {
            <script src="/Content/client/ro/js/rocms.client.orderform.js"></script>
            <script type="text/javascript">
                $(function () {
                    onOrderFormLoaded("@(formId)", parseInt("@form.OrderFormId"), parseInt("@form.MaxFileAttachmentsCount"), "@form.FileAttachmentEnabled",
                        "@form.RedirectUrl", "@form.SuccessMessage", "@form.MetricsCode");
                });
            </script>
        }
    </div>
}