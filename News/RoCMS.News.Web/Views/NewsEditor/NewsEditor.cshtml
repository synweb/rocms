@using System.Web.Optimization
@using Newtonsoft.Json.Converters
@using RoCMS.Base.ForWeb.Models
@using RoCMS.Base.Models
@using RoCMS.News.Contract.Models
@using RoCMS.News.Contract.Services
@using RoCMS.News.Contract.Resources
@using RoCMS.Web.Contract.Extensions
@model RoCMS.News.Contract.Models.NewsItem

@{
    if (!Request.IsAjaxRequest())
    {
        Layout = "~/Views/Shared/_adminLayout.cshtml";
    }

    if (((string)ViewBag.Action) == "Create")
    {
        ViewBag.PageTitle = Strings.CreateNews_CreateTitle;
    }
    else
    {
        ViewBag.PageTitle = Strings.CreateNews_EditTitle + " '" + Model.Title + "'";
    }
    string emptyImg = Url.Content("~/Content/admin/ro/img/no-image.png");
    string imgSrc;
    if (Model != null && !String.IsNullOrEmpty(Model.ImageId))
    {
        imgSrc = Url.Action("Thumbnail", "Gallery", new { id = Model.ImageId });
    }
    else
    {
        imgSrc = emptyImg;
    }
    DateTime? postingDate = Model != null ?
                            Model.PostingDate.ApplySiteTimezone() :
                            DateTime.UtcNow.ApplySiteTimezone();

    DateTime? eventDate = Model != null && Model.EventDate.HasValue ?
                        Model.EventDate.Value.ApplySiteTimezone() :
                        (DateTime?)null;


}


<div class="news-items-info" data-bind="with: newsItem">

    <div class="col-md-6">
        <form class="news-info">
            <div class="form-group">
                <div class="content-toggle-container">
                    <button type="button" class=" btn btn-info btn-xs" id="toggle-ck"></button>
                    @Html.LabelFor(m => m.Text, Strings.CreateNews_Text)
                </div>
            </div>
            <div class="form-group">
                @Html.Partial("WYSIWYG", new EditorVM(null, "news_content", "news-content", ACEModes.HTML) { ShowCommonButtons = true })
                @Html.ValidationMessageFor(m => m.Text)
            </div>
            <div class="form-group">
                <div style="float: right">Длина описания: <span class="description-length">@(Model != null && !String.IsNullOrEmpty(Model.Description) ? Model.Description.Length : 0)</span></div>
                @Html.LabelFor(m => m.Description, Strings.CreateNews_Description)
                @Html.ValidationMessageFor(m => m.Description)
            </div>
            <div class="form-group">
                <textarea name="Description" data-bind="value: description" class="news-description form-control"></textarea>
            </div>
            <div class="form-group"><label>Рубрики</label></div>
            <div class="form-group">
                <script type="text/x-jquery-tmpl" id="category-item-template">
                    <span class="category-item">
                        <span data-bind="text: name"></span>
                        <a class="btn btn-xs btn-danger" onclick="true" data-bind="click: function() {$parent.removeCategory($data, $parent);}"><em class="fa fa-trash-o"></em></a>
                    </span>
                </script>
                <div>
                    <div class="categories-row news-item-categories" data-bind="template: { name: 'category-item-template', foreach: $root.parents }">
                    </div>
                    <a class="btn btn-xs btn-success" onclick="true" data-bind="click: addCategory"><em class="fa fa-plus"></em></a>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PostingDate, Strings.CreateNews_PostingDateTime)
            </div>
            <div class="form-group">
                <input type="text" class="news-publish-date form-control"
                       data-date-format="dd-mm-yyyy" value="@string.Format("{0:00}.{1:00}.{2}", postingDate.Value.Day, postingDate.Value.Month, postingDate.Value.Year)" />
                <input type="text" class="news-publish-time form-control" value="@string.Format("{0:00}:{1:00}", postingDate.Value.Hour, postingDate.Value.Minute)" />
            </div>
            <div class="form-group"><label>Тип записи</label></div>
            <div class="form-group">
                @{
                    RecordType type = Model != null ? Model.RecordType : RecordType.Default;
                }
                <fieldset class="rectype">
                    <div>
                        <input type="radio" data-bind="checked: recordType" name="post_format" class="post-format" id="rectype_default" value="Default">
                        <label for="rectype_default" class="post-format-icon">
                            <i class="fa fa-newspaper-o fa-lg fa-fw"></i>&nbsp;Стандартный
                        </label>
                    </div>
                    <div>
                        <input type="radio" data-bind="checked: recordType" name="post_format" class="post-format" id="rectype_link" value="Link">
                        <label for="rectype_link" class="post-format-icon">
                            <i class="fa fa-external-link fa-lg fa-fw"></i>&nbsp;Ссылка
                        </label>
                    </div>
                    <div>
                        <input type="radio" data-bind="checked: recordType"  name="post_format" class="post-format" id="rectype_image" value="Image">
                        <label for="rectype_image" class="post-format-icon">
                            <i class="fa fa-picture-o fa-lg fa-fw"></i>&nbsp;Картинка
                        </label>
                    </div>
                    <div>
                        <input type="radio" data-bind="checked: recordType"  name="post_format" class="post-format" id="rectype_quote" value="Quote">
                        <label for="rectype_quote" class="post-format-icon">
                            <i class="fa fa-quote-left fa-lg fa-fw"></i>&nbsp;Цитата
                        </label>
                    </div>
                    <div>
                        <input type="radio" data-bind="checked: recordType"  name="post_format" class="post-format" id="rectype_video" value="Video">
                        <label for="rectype_video" class="post-format-icon">
                            <i class="fa fa-video-camera fa-lg fa-fw"></i>&nbsp;Видео
                        </label>
                    </div>
                    <div>
                        <input type="radio" data-bind="checked: recordType" name="post_format" class="post-format" id="rectype_file" value="File">
                        <label for="rectype_file" class="post-format-icon">
                            <i class="fa fa-file-zip-o fa-lg fa-fw"></i>&nbsp;Файл
                        </label>
                    </div>
                    <div>
                        <input type="radio" data-bind="checked: recordType" name="post_format" class="post-format" id="rectype_event" value="Event">
                        <label for="rectype_event" class="post-format-icon">
                            <i class="fa fa-flash fa-lg fa-fw"></i>&nbsp;Мероприятие
                        </label>
                    </div>
                </fieldset>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.EventDate, "Дата и время мероприятия")
            </div>
            <div class="form-group">
                <input type="text" class="news-event-date form-control"
                       data-date-format="dd-mm-yyyy" @*value="@(eventDate != null ? string.Format("{0:00}.{1:00}.{2}", eventDate.Value.Day, eventDate.Value.Month, eventDate.Value.Year) : "")"*@ />
                <input type="text" class="news-event-time form-control" @*value="@(eventDate != null ? string.Format("{0:00}:{1:00}", eventDate.Value.Hour, eventDate.Value.Minute) : "")"*@ />
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ImageId, Strings.CreateNews_Image)
            </div>
            <div class="form-group">
                @{
                    string imageId = String.Empty;
                    if (Model != null)
                    {
                        imageId = Model.ImageId;
                    }
                    <img class="news-img pointer img-responsive" src="@imgSrc" data-id="@imageId" />

                        <input type="button" class="btn btn-danger btn-xs removeNewsImage" value="Убрать картинку" style="vertical-align: top; @(String.IsNullOrWhiteSpace(imageId) ? "display:none;" : "")" />

                }
            </div>
            <div class="form-group">
                <label for="newsTags">Теги</label>
            </div>
            <div class="form-group">
                <input id="newsTags" data-bind="value: tags" class="form-control news-tags form-control" />
            </div>
            <div class="form-group">
                <label>Прикреплённый файл</label>
            </div>
            <div class="form-group">
                @{
                    string file = Model != null ? Model.Filename : null;
                    bool filePicked = !string.IsNullOrEmpty(file);
                }
                <div class="file-not-picked" style="@(filePicked ? "display:none" : "")">
                    <a href="#" class="pick-file"><i class="fa fa-file-zip-o"></i>&nbsp;Выбрать</a>
                </div>
                <div class="file-picked" style="@(filePicked ? "" : "display:none")">
                    <span class="picked-file" data-filename="@file">@file</span>
                    <a class="picked-file-remove" href="#"><i class="fa fa-times"></i></a>
                    <a class="picked-file-download" target="_blank" download="@file" href="@(filePicked ? "/File/Get/" + file + "/" : "/")"><i class="fa fa-download"></i></a>
                </div>
            </div>
            <div class="form-group">
                <label>Видео</label>
            </div>
            <div class="form-group">
                @{
                    string videoId = Model != null ? Model.VideoId : null;
                    bool videoPicked = !string.IsNullOrEmpty(videoId);
                }
                <div class="video-not-picked" style="@(videoPicked ? "display:none" : "")">
                    <a href="#" class="pick-video"><i class="fa fa-file-video-o"></i>&nbsp;Выбрать</a>
                </div>
                <div class="video-picked" style="@(videoPicked ? "" : "display:none")">
                    <img class="video-thumb" src="@(videoPicked ? "http://img.youtube.com/vi/" + videoId + "/default.jpg" : emptyImg)" data-video-id="@videoId" />
                    <a class="picked-video-remove" href="#"><i class="fa fa-times"></i></a>
                    <a class="picked-video-watch" target="_blank" href="https://youtu.be/@videoId"><i class="fa fa-eye"></i></a>
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-6">
        @Html.Partial("~/Views/Admin/_HeartEditor.cshtml")
    </div>




    @*<div class="fixed-action-menu">
        @if ((string)ViewBag.Action == "Create")
        {
            <a id="createNews" class="button-accept btn btn-success" onclick="true" data-bind="click: create"><i class="fa fa-check"></i> @Strings.CreateNews_CreateButton</a>
        }
        else
        {
            <a id="acceptNews" class="button-accept btn btn-success" onclick="true" data-bind="click: update"><i class="fa fa-check"></i> @Strings.EditNews_AcceptButton</a>
            <a class="btn btn-warning" href="@Url.RouteUrl("BlogItem", new {relativeUrl = Model.RelativeUrl})"><i class="fa fa-share"></i> Перейти</a>
            <a onclick="true" class="btn btn-danger button-delete" data-news-id="@Model.HeartId"><i class="fa fa-times"></i> Удалить</a>
        }
        <a class="btn btn-default" href="/NewsEditor/News">@Strings.EditNews_ReturnToNews</a>
    </div>*@
</div>

<div class="fixed-action-menu">
    <a data-bind="click: save" class="button-accept btn btn-success" title="@Strings.EditNews_AcceptButton" href="#"><i class="fa fa-check"></i> @Strings.EditNews_AcceptButton</a>

    <a data-bind="visible: newsItem().editMode, attr: {href: '/' + newsItem().canonicalUrl()}" class="btn btn-warning"><i class="fa fa-share"></i> Перейти</a>
    <a class="btn btn-default" href="/Admin/Pages">@Strings.EditNews_ReturnToNews</a>
</div>


@Js("/bin/Content/admin/news/js/edit.js")
@Css("/bin/Content/admin/news/css/style.css")
@JsInline(
    @<script type="text/javascript">
        $(function () {
            newsEditorLoaded("@(Model != null ? Model.HeartId : -1)");

            $(".button-delete").click(function () {
                if (!confirmRemoval()) {
                    return false;
                }

                var id = $(this).data("newsId");
                if (!id) return false;
                blockUI();
                $.post("/api/news/news/" + id + "/delete", null, function (res) {
                    if (res.succeed) {
                        location.href = "/NewsEditor/News";
                    } else {
                        smartAlert("Ошибка при удалении");
                    }
                }).always(unblockUI);
            });

        });


    </script>)